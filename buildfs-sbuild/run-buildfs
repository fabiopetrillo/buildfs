#! /bin/bash

basedir=/data
path=$1
project=$2
with_strace=$3
iterations=$4


mkdir -p $basedir/$project
cd $path
echo $(pwd) > $basedir/$project/$project.path

debian/rules clean
debian/rules build
if [ ! -f Makefile ]; then
  echo "Couln't find Makefile" > $basedir/$project/$project.warning
fi

make clean
for i in {1..$iterations}; do
  if [ $with_strace -eq 0 ]; then
    echo "Building the Make project $project without BuildFS..."
    echo "Depending on the build, it may take some time (even hours). Bear with us..."
    start_time=$(date +%s.%N)
    make
    elapsed_time=$(echo "$(date +%s.%N) - $start_time" | bc)
    # Compute the time spent on build.
    printf "%.2f\n" $elapsed_time >> $basedir/$project/base-build.time
  else
    sed -i -r 's/make/\$\(MAKE\)/' Makefile
    echo "Building Make project $project with BuildFS..."
    echo "Depending on the build, it may take some time (even hours). Bear with us..."
    buildfs make-build \
      -mode online \
      -trace-file $basedir/$project/$project.strace \
      -print-stats \
      -build-dir "$(pwd)" > $basedir/$project/$project.faults 2> $basedir/$project/err
      if [ ! -s $basedir/$project/err ]; then
        rm $basedir/$project/err
        # This is the build time using BuildFS...
        btime=$(cat $basedir/$project/$project.faults |
            grep -oP 'Analysis time: .*' |
            sed -r 's/Analysis time: (.*)/\1/g')
        echo $btime >> $basedir/$project/build-buildfs.times
        make -pn > $basedir/$project/$project.makedb
      fi
    make clean
  fi
done
